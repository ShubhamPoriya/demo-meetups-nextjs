{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shubhamporiya/Documents/nextjs-project/pages/index.js\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n} // NOTE: [getStaticProps] and [getServerSideProps] are very important key concepts of nextJS.\n// ======================================================================================\n// All the code runs on server side and nothing on client side\n// useful to save cedentials which are not to be exposed to clients/ users\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   return {\n//     props: DUMMY_MEETUPS,\n//   };\n// }\n// data fetching for pre-rendering\n// First the getStaticProps function promise will be resolved before executing the above function.\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://mongoose-mongodb:1234@cluster0.qwybnjp.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  const allMeetups = JSON.parse(JSON.stringify(meetups));\n  client.close(); // NOTE: the code in this function is executed during build process so it will never be seen on client side.\n  // This function returns an OBJECT always.\n\n  return {\n    props: {\n      meetups: allMeetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/shubhamporiya/Documents/nextjs-project/pages/index.js"],"names":["Head","Fragment","MeetupList","HomePage","props","meetups","getStaticProps","client","MongoClient","connect","db","meetupsCollection","collection","find","toArray","allMeetups","JSON","parse","stringify","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAED;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMC,WAAW,CAACC,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMP,OAAO,GAAG,MAAMM,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEA,QAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeb,OAAf,CAAX,CAAnB;AAEAE,EAAAA,MAAM,CAACY,KAAP,GAbqC,CAcrC;AACA;;AACA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEU,UAAU,CAACK,GAAX,CAAgBC,MAAD,KAAa;AACnCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADqB;AAEnCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFmB;AAGnCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHqB;AAInCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ+B,OAAb,CAAf;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD;AAED,eAAezB,QAAf","sourcesContent":["import Head from \"next/head\";\nimport { Fragment } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return (\n    <Fragment>\n      <Head>\n        <title>React meetups</title>\n      </Head>\n      <MeetupList meetups={props.meetups} />\n    </Fragment>\n  );\n}\n\n// NOTE: [getStaticProps] and [getServerSideProps] are very important key concepts of nextJS.\n// ======================================================================================\n\n// All the code runs on server side and nothing on client side\n// useful to save cedentials which are not to be exposed to clients/ users\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n\n//   return {\n//     props: DUMMY_MEETUPS,\n//   };\n// }\n\n// data fetching for pre-rendering\n// First the getStaticProps function promise will be resolved before executing the above function.\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mongoose-mongodb:1234@cluster0.qwybnjp.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  const allMeetups = JSON.parse(JSON.stringify(meetups));\n\n  client.close();\n  // NOTE: the code in this function is executed during build process so it will never be seen on client side.\n  // This function returns an OBJECT always.\n  return {\n    props: {\n      meetups: allMeetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 1,\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}