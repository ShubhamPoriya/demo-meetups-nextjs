{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shubhamporiya/Documents/nextjs-project/pages/index.js\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Highly active meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n} // NOTE: [getStaticProps] and [getServerSideProps] are very important key concepts of nextJS.\n// ======================================================================================\n// All the code runs on server side and nothing on client side\n// useful to save cedentials which are not to be exposed to clients/ users\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   return {\n//     props: DUMMY_MEETUPS,\n//   };\n// }\n// data fetching for pre-rendering\n// First the getStaticProps function promise will be resolved before executing the above function.\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/shubhamporiya/Documents/nextjs-project/pages/index.js"],"names":["Head","Fragment","MeetupList","HomePage","props","meetups"],"mappings":";;AAEA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,C,CAED;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;KA3BSF,Q;;AAyDT,eAAeA,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return (\n    <Fragment>\n      <Head>\n        <title>React meetups</title>\n        <meta name=\"description\" content=\"Highly active meetups\" />\n      </Head>\n      <MeetupList meetups={props.meetups} />\n    </Fragment>\n  );\n}\n\n// NOTE: [getStaticProps] and [getServerSideProps] are very important key concepts of nextJS.\n// ======================================================================================\n\n// All the code runs on server side and nothing on client side\n// useful to save cedentials which are not to be exposed to clients/ users\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n\n//   return {\n//     props: DUMMY_MEETUPS,\n//   };\n// }\n\n// data fetching for pre-rendering\n// First the getStaticProps function promise will be resolved before executing the above function.\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mongoose-mongodb:1234@cluster0.qwybnjp.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  const allMeetups = JSON.parse(JSON.stringify(meetups));\n\n  client.close();\n  // NOTE: the code in this function is executed during build process so it will never be seen on client side.\n  // This function returns an OBJECT always.\n  return {\n    props: {\n      meetups: allMeetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 1,\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}